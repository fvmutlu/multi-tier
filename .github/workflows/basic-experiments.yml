name: Basic experiment runs

on:
  workflow_dispatch:
    inputs:
        topology:
          description: 'Network topology to use in experiment'
          required: false
          default: 'abilene'
          type: string
        runner:
          description: 'Which runner to send the job to'
          required: true
          type: choice
          options:
          - ubuntu-latest
          - self-hosted

env:
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    IMAGE_NAME: multi-tier

jobs:   
    run-st-req-rate:
        runs-on: ${{ inputs.runner }}
        steps:
          - name: Pull Docker image
            run: docker pull ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          - name: Run st_req_rate experiment and upload result
            run: |
              mkdir -p ~/actions-artifacts
              mkdir -p ~/actions-artifacts/sim_outputs
              docker run --rm -v ~/actions-artifacts/sim_outputs:/multi-tier/sim_outputs ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest python3 -m simulator.sim_runner -e=st_req_rate -t=${{ inputs.topology }} --config_local=./sim_configs/ct_configs/st_req_rate_config.json
              docker run --rm -v ~/actions-artifacts/sim_outputs:/multi-tier/sim_outputs ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest python3 -m data_analysis.ct_plotter -e=st_req_rate -t=${{ inputs.topology }}
          - uses: actions/upload-artifact@v3
            with:
              name: st_req_rate
              path: ~/actions-artifacts/sim_outputs/st_req_rate*
    run-st-cache-size:
        runs-on: ${{ inputs.runner }}
        steps:
          - name: Pull Docker image
            run: docker pull ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          - name: Run st_cache_size experiment and upload result
            run: |
                mkdir -p ~/actions-artifacts
                mkdir -p ~/actions-artifacts/sim_outputs
                docker run --rm -v ~/actions-artifacts/sim_outputs:/multi-tier/sim_outputs ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest python3 -m simulator.sim_runner -e=st_cache_size -t=${{ inputs.topology }} --config_local=./sim_configs/ct_configs/st_cache_size_config.json
                docker run --rm -v ~/actions-artifacts/sim_outputs:/multi-tier/sim_outputs ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest python3 -m data_analysis.ct_plotter -e=st_cache_size -t=${{ inputs.topology }}
          - uses: actions/upload-artifact@v3
            with:
                name: st_cache_size
                path: ~/actions-artifacts/sim_outputs/st_cache_size*
    run-st-zipf-param:
        runs-on: ${{ inputs.runner }}
        steps:
          - name: Pull Docker image
            run: docker pull ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          - name: Run st_zipf_param experiment and upload result
            run: |
                mkdir -p ~/actions-artifacts
                mkdir -p ~/actions-artifacts/sim_outputs
                docker run --rm -v ~/actions-artifacts/sim_outputs:/multi-tier/sim_outputs ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest python3 -m simulator.sim_runner -e=st_zipf_param -t=${{ inputs.topology }} --config_local=./sim_configs/ct_configs/st_zipf_param_config.json
                docker run --rm -v ~/actions-artifacts/sim_outputs:/multi-tier/sim_outputs ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest python3 -m data_analysis.ct_plotter -e=st_zipf_param -t=${{ inputs.topology }}
          - uses: actions/upload-artifact@v3
            with:
                name: st_zipf_param
                path: ~/actions-artifacts/sim_outputs/st_zipf_param*